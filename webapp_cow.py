# -*- coding: utf-8 -*-
"""Webapp_cow.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18gdTViuDZWONVFfHguFogh4y_zIosCF6
"""

#from flask_ngrok import run_with_ngrok
import flask
from flask import Flask, redirect, url_for, render_template
import os
import time
import uuid
import pickle
import torch
import PIL.Image as Image

app= Flask(__name__)
#use it on google colab
#run_with_ngrok(app)
cow_path = "output/network-snapshot-008064.pkl"

def generateImage(image_name):
    # call the GANS model generate image save as unique name in the '/static' directory
#     with Image.open('./GAN_Image/bg2.jpg') as im:
#         im.save('./static/'+image_name)
        #time.sleep(1)    
    z = torch.randn([1, G.z_dim]).cuda()    # latent codes
    c = None                                # class labels (not used in this example)
    img = G(z, c)       
    img = (img.permute(0, 2, 3, 1) * 127.5 + 128).clamp(0, 255).to(torch.uint8)
    cow_img = Image.fromarray(img[0].cpu().numpy(), 'RGB')
    cow_img.save('./static/'+image_name)
    print('image- saved')

@app.route("/")
def home():
    #return "<h1>GFG is great platform to learn</h1>"
    id  = str(uuid.uuid1())
    image_name = id + '.jpg'
    print(image_name)
    generateImage(image_name)
    return render_template("Main.html", image_name = image_name, image_id = id)
    


if __name__ == "__main__":
    # load the Trained model
    #cow_path = "model/network-snapshot-000371.pkl"
    print('start')
    with open(cow_path, 'rb') as f:
        print('load...')
        G = pickle.load(f)['G_ema'].cuda()  # torch.nn.Module
    print('finish loading model')
    app.run(host='0.0.0.0', port=5000)



